apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.namespace }}-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      name: {{ .Values.namespace }}-pod
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: {{ .Values.namespace }}-pod
    spec:
      serviceAccountName: monitoring  
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: kuber-pvc
        - name: config
          configMap:
            name: kuber-cm
        - name: metrics-volume
          emptyDir: {}  
      initContainers:
        - name: {{ .Values.containers.init.name }}
          image: {{ .Values.containers.init.image }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              wget -O /init/index.html https://example.com
              wget -O /metrics/metrics.html "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/metrics" \
                --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                --no-check-certificate
          volumeMounts:
            - name: shared-volume
              mountPath: /init
            - name: metrics-volume
              mountPath: /metrics
      containers:
        - name: {{ .Values.containers.web.name }}
          image: {{ .Values.containers.web.image }} 
          ports:
            - containerPort: {{ .Values.containers.web.port }}
          volumeMounts:
            - name: shared-volume
              mountPath: /usr/share/nginx/html
            - name: config
              mountPath: "/homework/conf"
              readOnly: true
            - name: metrics-volume
              mountPath: /usr/share/nginx/html/metrics
          {{- if eq .Values.containers.enable_probes "yes" -}}
          {{ .Values.containers.probe | toYaml | nindent 10 }}
          {{- end }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "ln -s /homework/conf /usr/share/nginx/html && ln -s /usr/share/nginx/html/metrics/metrics.html /usr/share/nginx/html/metrics.html"]
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -f /usr/share/nginx/html/index.html && rm -r /usr/share/nginx/html/conf && rm -f /usr/share/nginx/html/metrics.html && rm -rf /usr/share/nginx/html/metrics"]
